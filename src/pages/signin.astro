---
import { app } from "../firebase/server";
import { getAuth } from "firebase-admin/auth";

import Layout from "../layouts/Layout.astro";

import fbLogo  from "../assets/login_icons/facebook.png"
import googleLogo from "../assets/login_icons/google.png"
import appleLogo from "../assets/login_icons/apple.png"

/* Check if the user is authenticated */
const auth = getAuth(app);
if (Astro.cookies.has("__session")) {
  const sessionCookie = Astro.cookies.get("__session").value;
  const decodedCookie = await auth.verifySessionCookie(sessionCookie);
  if (decodedCookie) {
    return Astro.redirect("/dashboard");
  }
}
---

<Layout title="Sign in">
  <div class="card">
    <h1>Sign in</h1>
    <p>New here? <a href="/register"><strong>Create an account</strong></a></p>
    <form action="/api/auth/signin" method="post">
      <label for="email">Email</label>
      <input type="email" name="email" id="email" />
      <label for="password">Password</label>
      <input type="password" name="password" id="password" />
      <button type="submit">Login</button>
    </form>

    <button id="google" class="fb-material-button">
      <img src={googleLogo.src} alt="Google logo" />
    </button>

    <button id="facebook" class="fb-material-button">
     <img src={fbLogo.src} alt="Facebook logo" />
    </button>
  </div>
</Layout>

<style>
  .card {
    background: white;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    max-width: 400px;
    margin: 50px auto;
    padding: 20px;
    text-align: center;
    border: 1px solid black;
  }

  .card h1 {
    margin-bottom: 10px;
  }

  .card p {
    margin-bottom: 20px;
  }

  .card form {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .card label {
    margin-bottom: 5px;
    text-align: left;
    width: 100%;
  }

  .card input {
    margin-bottom: 15px;
    padding: 10px;
    width: 100%;
    max-width: 300px;
    border: 1px solid #ccc;
    border-radius: 4px;
  }

  .card button[type="submit"] {
    margin-bottom: 20px;
    padding: 10px 20px;
    border: none;
    border-radius: 4px;
    background-color: #007bff;
    color: white;
    cursor: pointer;
  }

</style>
<script>
  import {
    getAuth,
    inMemoryPersistence,
    signInWithEmailAndPassword,
    GoogleAuthProvider,
    FacebookAuthProvider,
    signInWithPopup,
  } from "firebase/auth";
  import { app } from "../firebase/client";

  const auth = getAuth(app);

  // This will prevent the browser from storing session data
  auth.setPersistence(inMemoryPersistence);

  const form = document.querySelector<HTMLFormElement>("form");
  if (form){
    form.addEventListener("submit", async (e) => {
    e.preventDefault();
    const formData = new FormData(form);
    const email = formData.get("email")?.toString();
    const password = formData.get("password")?.toString();

    if (!email || !password) {
      return;
    }

    try {
      const userCredential = await signInWithEmailAndPassword(
        auth,
        email,
        password
      );
      const idToken = await userCredential.user.getIdToken();
      const response = await fetch("/api/auth/signin", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ idToken }),
      });

      if (response.redirected) {
        window.location.assign(response.url);
      }
    } catch (error) {
      console.error("Error signing in with email and password:", error);
    }

    });
  }
  

  const gSignIn = document.querySelector<HTMLButtonElement>("#google");

  if(gSignIn){
    gSignIn.addEventListener("click", async () => {
      const provider = new GoogleAuthProvider();
      try {
        const userCredential = await signInWithPopup(auth, provider);
        const idToken = await userCredential.user.getIdToken();
        const res = await fetch("/api/auth/signin", {
          headers: {
            Authorization: `Bearer ${idToken}`,
          }
        });

        if (res.redirected) {
          window.location.assign(res.url);
        }
      } catch (error) {
        console.error("Error signing in with Google:", error);
      }
    });
  }

  const fSignIn = document.querySelector<HTMLButtonElement>("#facebook");
  if(fSignIn){
    fSignIn.addEventListener("click", async () => {
      const provider = new FacebookAuthProvider();
      try {
        const userCredential = await signInWithPopup(auth, provider);
        const idToken = await userCredential.user.getIdToken();
        const res = await fetch("/api/auth/signin", {
          headers: {
            Authorization: `Bearer ${idToken}`,
          }
        });

        if (res.redirected) {
          window.location.assign(res.url);
        }
      } catch (error) {
        console.error("Error signing in with Facebook:", error);
      }
    });
  }

</script>
