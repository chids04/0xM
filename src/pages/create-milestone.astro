---
import Layout from "../layouts/Navbar.astro";
import { CreateMilestone } from "@/components/react/CreateMilestone";
import { getFirestore } from "firebase-admin/firestore";
import { getAuth } from "firebase-admin/auth";
import { app } from "../firebase/server";

interface Friend {
  uid: string;
  displayName: string;
  email: string;
  photoURL: string;
}

let friends: Friend[] = [];
let friendIds: string[] = [];

const db = getFirestore(app);
const auth = getAuth(app);
const user = Astro.locals.user;

const requestStatusDoc = await db
  .collection("users")
  .doc(user.uid)
  .collection("friends")
  .doc("request-status")
  .get();
if (requestStatusDoc.exists) {
  const requestData = requestStatusDoc.data();
  friendIds = requestData?.acceptedRequests || [];
}

if (friendIds.length > 0) {
  friends = (await Promise.all(
    friendIds.map(async (id) => {
      try {
        const friend = await auth.getUser(id);
        return {
          uid: id,
          displayName: friend.displayName || "User",
          email: friend.email,
          photoURL:
            friend.photoURL ||
            `https://api.dicebear.com/7.x/initials/svg?seed=${friend.displayName || friend.email || id}`,
        };
      } catch (e) {
        console.error(e);
        return null;
      }
    })
  )).filter((friend): friend is Friend => friend !== null);
}
---

<Layout title="Create Milestone">
  <CreateMilestone client:load friends={friends} userId={user.uid} />
</Layout>
