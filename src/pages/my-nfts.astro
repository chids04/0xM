---
import Layout from "../layouts/Navbar.astro";
import { NFTGallery } from "@/components/react/NFTGallery";
import { app } from "../firebase/server";
import { getFirestore } from "firebase-admin/firestore";
import { getAuth } from "firebase-admin/auth";

// Get the current user
const user = Astro.locals.user;

// Redirect if not authenticated
if (!user) {
  return Astro.redirect("/signin");
}

interface Friend {
  uid: string;
  displayName: string;
  email: string;
  photoURL: string;
}

let friends: Friend[] = [];
let friendIds: string[] = [];
let walletAddress = "";

const db = getFirestore(app);
const auth = getAuth(app);

// Get user wallet address
try {
  const walletRef = db.collection("users").doc(user.uid).collection("wallet").doc("wallet_info");
  const walletDoc = await walletRef.get();
  const walletData = walletDoc.data();

  if (walletData) {
    walletAddress = walletData.publicKey;
  }

  // Get friends list for NFT transfer functionality
  const requestStatusDoc = await db
    .collection("users")
    .doc(user.uid)
    .collection("friends")
    .doc("request-status")
    .get();

  if (requestStatusDoc.exists) {
    const requestData = requestStatusDoc.data();
    friendIds = requestData?.acceptedRequests || [];
  }

  if (friendIds.length > 0) {
    friends = (await Promise.all(
      friendIds.map(async (id) => {
        try {
          const friend = await auth.getUser(id);
          return {
            uid: id,
            displayName: friend.displayName || "User",
            email: friend.email,
            photoURL:
              friend.photoURL ||
              `https://api.dicebear.com/7.x/initials/svg?seed=${friend.displayName || friend.email || id}`
          };
        } catch (e) {
          console.error(e);
          return null;
        }
      })
    )).filter((friend): friend is Friend => friend !== null);
  }
} catch (error) {
  console.error("Error fetching wallet or friends:", error);
}
---

<Layout title="My NFT Collection" user={user}>
  <div class="container mx-auto px-4 py-8">
    <div class="flex flex-col md:flex-row md:items-center justify-between mb-8">
      <div>
        <h1 class="text-3xl font-bold text-white">My NFT Collection</h1>
        <p class="text-gray-400 mt-2">
          View and manage your milestone NFTs
        </p>
      </div>
      <a 
        href="/personal-milestones" 
        class="mt-4 md:mt-0 inline-flex items-center rounded-md bg-purple-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-purple-500"
      >
        <svg class="-ml-0.5 mr-1.5 h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
          <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm.75-11.25a.75.75 0 00-1.5 0v2.5h-2.5a.75.75 0 000 1.5h2.5v2.5a.75.75 0 001.5 0v-2.5h2.5a.75.75 0 000-1.5h-2.5v-2.5z" clip-rule="evenodd" />
        </svg>
        Mint New NFT
      </a>
    </div>

    <NFTGallery client:visible userId={user.uid} friends={friends} />
  </div>
</Layout>